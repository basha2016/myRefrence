package com.example1; import static org.junit.jupiter.api.Assertions.assertEquals; import org.junit.jupiter.api.Assertions; import org.junit.jupiter.api.Test; public class CalculatorTest { Multiplication m = new Multiplication(); @Test public void multiplyThreeNumbers() // multiplying three or more numbers { int result = m.multiply("1,2,3"); assertEquals(result, 6); } @Test public void when2NumbersAreUsed() // multiplying two numbers { int result= m.multiply("1,2"); assertEquals(result, 2); } @Test public void stringEmpty()// Multiplication when string is empty { int result = m.multiply(""); assertEquals(result,0); } @Test public void numberEmpty()// Multiplication when string is empty { Assertions.assertThrows(NumberFormatException.class, () -> m.multiply("1,2,,4")); } @Test public void formatException(){ // alphabets passed Assertions.assertThrows(NumberFormatException.class, () -> m.multiply("1,X")); } @Test public void LetterNumberException() {//when both number or alphabets found in the string Assertions.assertThrows(NumberFormatException.class, () -> m.multiply("1,2x")); } @Test public void NegativeNumbers() // Test for negative Numbers { int result = m.multiply("1,-2"); assertEquals(result,-2); } @Test public void ContainspecialCharacter() // Test for special characters when found in the string { Assertions.assertThrows(NumberFormatException.class, () -> m.multiply("1,2;,4")); } }
